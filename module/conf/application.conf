# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="%APPLICATION_SECRET%"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global=com.github.Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
#logger.root=OFF

# Logger used by the framework:
#logger.play=OFF

# Logger provided to your application:
#logger.application=OFF

#http://doc.akka.io/docs/akka/2.2.0-RC1/scala/dispatchers.html
# play internal akka (does not seem to be applied)
play.akka {
  log-config-on-start = on 
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  #event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
}
# regular akka
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  #event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  log-config-on-start = off 
    actor {
         default-dispatcher = {
                                fork-join-executor {
                                                     parallelism-min = 4
                                                     parallelism-factor = 1.0
                                                     parallelism-max = 1000
                                }
                                throughput = 100
         }
         deployment {
                    default {
                              router = "smallest-mailbox"
                    }
         }
  }
}

# Cookie Name
session.cookieName=RUSK
# Cookie Domain
session.domain=".github.com"
# Cookie Secure Flag (available on SSL only)
session.secure=true

# CORS Domain (Comment out to make it reflect back the Origin's hostname value)
# The value of HTTPHeader "Access-Control-Allow-Origin"
# Disabled * to enable Credentials to work as per specs
# https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS
# TODO: Understand security implication and whitelist for production
#cors.allowed.domain="*"

# Security Headers
#play.filters.headers.frameOptions="DENY"
#play.filters.headers.xssProtection="1; mode=block"
#play.filters.headers.contentTypeOptions="nosniff"
#play.filters.headers.permittedCrossDomainPolicies="master-only"

# Interval for purging soft-deleted namespaces from mongo db
# 1 day
controllers.init.softDeletedNamespaceReaperIntervalInSeconds=86400

# Purge soft-deleted namespaces after 
# 90 days
controllers.init.softDeletedNamespaceReaperCutoffInMillis=7776000000

#SMTP configuration
#smtp.host=localhost
#smtp.port=25


#MONGO configuration coma separated <host>:<port> enclosed in double quotes
mongo.hostport="localhost:27017"

#MEMCACHE configuration coma separated <host>:<port> enclosed in double quotes
memcache.hostport="localhost:11211"


